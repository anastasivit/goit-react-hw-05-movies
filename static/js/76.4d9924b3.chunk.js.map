{"version":3,"file":"static/js/76.4d9924b3.chunk.js","mappings":"2OACA,GAAiB,E,SC2DjB,EAvDa,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACNC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA6B9B,OA3BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEsD,GAFtDF,EAAAC,KAAA,IAERJ,EAAQpB,EAAO0B,MAAK,SAAAN,GAAK,OAAIA,EAAMO,GAAGC,aAAe3B,CAAO,KACxD,CAADsB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACgBI,EAAAA,EAAMC,IAAI,sCAADC,OACQX,EAAMO,GAAE,YAC9C,CACEK,OAAQ,CACNC,QAAS,sCAGb,KAAD,EAPKZ,EAAQE,EAAAW,KAQd1B,EAAQa,EAASc,KAAK5B,MACtBK,GAAa,GAAOW,EAAAE,KAAA,iBAEpBb,GAAa,GAAO,QAAAW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAGtBc,QAAQC,MAAM,uBAAsBf,EAAAa,IACpCxB,GAAa,GAAO,yBAAAW,EAAAgB,OAAA,GAAApB,EAAA,mBAEvB,kBArBc,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAuBf3B,GACF,GAAG,CAACb,EAASD,IAETW,GACK+B,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGM,IAAhBpC,EAAKqC,QACAF,EAAAA,EAAAA,KAAA,OAAAC,SAAK,4CAIZE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,cAAcL,SAAA,EACnCD,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAOE,MAAMN,SAAC,UAC7BD,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAOG,SAASP,SAC5BpC,EAAK4C,KAAI,SAAAC,GAAK,OACbV,EAAAA,EAAAA,KAAA,MAAmBI,UAAWC,EAAOM,UAAUV,SAC5CS,EAAME,MADAF,EAAMzB,GAEV,QAKf,C","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './Cast.module.css';\n\nconst Cast = ({ movies }) => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const movie = movies.find(movie => movie.id.toString() === movieId);\n        if (movie) {\n          const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movie.id}/credits`,\n            {\n              params: {\n                api_key: 'a671f7524d97836b3853115348c4c13a',\n              },\n            }\n          );\n          setCast(response.data.cast);\n          setIsLoading(false);\n        } else {\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId, movies]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (cast.length === 0) {\n    return <div>We don't have any cast for this movie.</div>;\n  }\n\n  return (\n    <div className={styles.castContainer}>\n      <h2 className={styles.title}>Cast</h2>\n      <ul className={styles.castList}>\n        {cast.map(actor => (\n          <li key={actor.id} className={styles.actorName}>\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_ref","movies","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movie","response","wrap","_context","prev","next","find","id","toString","axios","get","concat","params","api_key","sent","data","t0","console","error","stop","apply","arguments","_jsx","children","length","_jsxs","className","styles","castContainer","title","castList","map","actor","actorName","name"],"sourceRoot":""}