{"version":3,"file":"static/js/186.e31e6010.chunk.js","mappings":"gNA4DA,UAxDgB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA6B9B,OA3BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEmD,GAFnDF,EAAAC,KAAA,IAEXJ,EAAQpB,EAAO0B,MAAK,SAAAN,GAAK,OAAIA,EAAMO,GAAGC,aAAe3B,CAAO,KACxD,CAADsB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACgBI,EAAAA,EAAMC,IAAI,sCAADC,OACQX,EAAMO,GAAE,YAC9C,CACEK,OAAQ,CACNC,QAAS,sCAGb,KAAD,EAPKZ,EAAQE,EAAAW,KAQd1B,EAAWa,EAASc,KAAKC,SACzBxB,GAAa,GAAOW,EAAAE,KAAA,iBAEpBb,GAAa,GAAO,QAAAW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAGtBe,QAAQC,MAAM,0BAAyBhB,EAAAc,IACvCzB,GAAa,GAAO,yBAAAW,EAAAiB,OAAA,GAAArB,EAAA,mBAEvB,kBArBiB,OAAAJ,EAAA0B,MAAA,KAAAC,UAAA,KAuBlB5B,GACF,GAAG,CAACb,EAASD,IAETW,GACKgC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGS,IAAnBrC,EAAQsC,QACHF,EAAAA,EAAAA,KAAA,OAAAC,SAAK,+CAIZE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGrC,EAAQwC,KAAI,SAAAC,GAAM,OACjBF,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAII,EAAOC,UACXN,EAAAA,EAAAA,KAAA,KAAAC,SAAII,EAAOE,YAFJF,EAAOrB,GAGX,QAKf,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = ({ movies }) => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const movie = movies.find(movie => movie.id.toString() === movieId);\n        if (movie) {\n          const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movie.id}/reviews`,\n            {\n              params: {\n                api_key: 'a671f7524d97836b3853115348c4c13a',\n              },\n            }\n          );\n          setReviews(response.data.results);\n          setIsLoading(false);\n        } else {\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId, movies]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (reviews.length === 0) {\n    return <div>We don't have any reviews for this movie.</div>;\n  }\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","movies","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchReviews","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movie","response","wrap","_context","prev","next","find","id","toString","axios","get","concat","params","api_key","sent","data","results","t0","console","error","stop","apply","arguments","_jsx","children","length","_jsxs","map","review","author","content"],"sourceRoot":""}