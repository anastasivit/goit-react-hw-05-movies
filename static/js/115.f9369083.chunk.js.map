{"version":3,"file":"static/js/115.f9369083.chunk.js","mappings":"wNAmEA,UA/De,WACb,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAAjBf,GAAW,GAAMa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAMC,IAAI,4CAE/B,CACEC,OAAQ,CACNC,QAAS,mCACTC,MAAO7B,KAGX,KAAD,EARKoB,EAAQE,EAAAQ,KASdzB,EAAiBe,EAASW,KAAKC,SAC/BpB,EAAS,iBAADqB,OAAkBjC,IAAcsB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAExCa,QAAQC,MAAM,0BAAyBd,EAAAY,IACvC7B,EAAiB,IAAI,QAEH,OAFGiB,EAAAC,KAAA,GAErBd,GAAW,GAAOa,EAAAe,OAAA,6BAAAf,EAAAgB,OAAA,GAAAnB,EAAA,wBAErB,kBApBiB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAsBlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAO7C,EACP8C,SAAU,SAAAC,GAAC,OAAI9C,EAAc8C,EAAEC,OAAOH,MAAM,KAE9CF,EAAAA,EAAAA,KAAA,UAAQM,QAASnC,EAAa4B,SAAC,WAC9BlC,GACCmC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eACsB,IAAzBtC,EAAc8C,QAChBP,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sBAELC,EAAAA,EAAAA,KAAA,MAAAD,SACGtC,EAAc+C,KAAI,SAAAC,GAAK,OACtBT,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAI,CACFC,SAAS,WAADtB,OAAamB,EAAMI,IAC3BC,MAAO,CAAEC,KAAMhD,EAAS6C,SAAUI,OAAQvD,IAC1CsC,SAEDU,EAAMQ,SAPFR,EAAMI,GASV,OAIXb,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,MAGb,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleSearch = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie`,\n        {\n          params: {\n            api_key: 'a671f7524d97836b3853115348c4c13a',\n            query: searchTerm,\n          },\n        }\n      );\n      setSearchResults(response.data.results);\n      navigate(`/movies?query=${searchTerm}`);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {loading ? (\n        <div>Loading...</div>\n      ) : searchResults.length === 0 ? (\n        <div>No results found</div>\n      ) : (\n        <ul>\n          {searchResults.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/${movie.id}`,\n                  state: { from: location.pathname, movies: searchResults },\n                }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","loading","setLoading","location","useLocation","navigate","useNavigate","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","params","api_key","query","sent","data","results","concat","t0","console","error","finish","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","length","map","movie","Link","to","pathname","id","state","from","movies","title","Outlet"],"sourceRoot":""}